#!/usr/bin/env bash


# Set bash to exit immediately if a command fails
set -o errexit
# Return a non-zero exit status if any part of a pipeline fails
set -o pipefail
# Treat unset variables as an error when expanding them
set -o nounset


# Get the directory of the script
working_dir="$(dirname ${0})"

# Source the constants and messages scripts
source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"


# Check if the backup filename is provided as the first argument
if [[ -z ${1+x} ]]; then
    message_error "Backup filename is not specified yet it is a required parameter. Make sure you provide one and try again."
    exit 1
fi


# Set the backup filename
backup_filename="${BACKUP_DIR_PATH}/${1}"


# Check if the backup file exists
if [[ ! -f "${backup_filename}" ]]; then
    message_error "No backup with the specified filename found. Check out the 'backups' maintenance script output to see if there is one and try again."
    exit 1
fi


# Display a welcome message
message_welcome "Restoring the '${POSTGRES_DB}' database from the '${backup_filename}' backup..."


# Check if POSTGRES_USER is 'postgres' (unsupported)
if [[ "${POSTGRES_USER}" == "postgres" ]]; then
    message_error "Restoring as 'postgres' user is not supported. Assign 'POSTGRES_USER' env with another one and try again."
    exit 1
fi


# Set PostgreSQL connection parameters
export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"


# Display an info message
message_info "Dropping the database..."
# Drop the existing database
dropdb "${PGDATABASE}"


# Display an info message
message_info "Creating a new database..."
# Create a new database with the same owner as the previous one
createdb --owner="${POSTGRES_USER}"


# Display an info message
message_info "Applying the backup to the new database..."
# Apply the backup to the new database
gunzip -c "${backup_filename}" | psql "${POSTGRES_DB}"


# Display a success message
message_success "The '${POSTGRES_DB}' database has been restored from the '${backup_filename}' backup."
